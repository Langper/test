import json,time,sys,os,xlrd,datetime,xlwt
from werkzeug.utils import secure_filename
def delete_file(dir_path = '\static\\temp\\userexcel\\'):
    if os.path.exists(dir_path):
        for prefix,dirs,files in os.walk(dir_path):
            for name in files:
                (shotname,extension) = os.path.splitext(name)
                try:
                    print("shortname:%s"%shotname)
                    timeArray1 = datetime.datetime.strptime(shotname[-14:-6],'%Y%m%d')
                    diff = datetime.datetime.now() - timeArray1
                    if(diff.days>=1):
                        print("diff.days")
                        print(diff.days)
                        print(os.path.join(prefix, name))
                        if(os.path.exists(os.path.join(prefix, name))):
                            print("os.path.join(prefix, name)")
                            os.remove(os.path.join(prefix, name))
                except Exception as e:
                    raise Exception("Delete files failed" + str(e))
    else :
        raise Exception("Delete fail No such dir (%s)"%dir_path)
    print("come here!")
    return


def save_file(f,child_path = '\static\\temp\\userexcel\\'):
    # basepath = os.getcwd()
    strtime = datetime.datetime.now().strftime('%Y%m%d%H%M%S')
    fileNameSuffix=secure_filename(f.filename)[-3:]

    if fileNameSuffix=="xls":
        fileName=secure_filename(f.filename)[0:-4]
        upload_path = child_path + fileName + strtime+".xls"
    else:
        fileName=secure_filename(f.filename)[0:-5]
        upload_path = child_path + fileName + strtime+".xlsx"
    f.save(upload_path)
    return upload_path

def com_log_txt(funcname,message):
    url = "C:\\Apache24\\htdocs\\excel\\log\\"
    # url = "D:\\GSCM_Log\\"
    shotname = datetime.datetime.now().strftime('%Y-%m-%d')
    extension = ".txt"
    # filename = url + funcname + "\\" + shotname + extension
    filename = os.path.join(url,funcname,shotname+extension)
    with open(filename,"a") as f:
        time_str = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        start_str = "At " + time_str + "... :\n"
        f.writelines(start_str)
        f.writelines(message + "\n")
